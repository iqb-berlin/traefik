x-env-logging: &env-logging
  options:
    max-size: "10m"
    max-file: "3"

services:
  traefik:
    image: traefik:2.10
    restart: always
    ports:
      - "${HTTP_PORT}:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-network
      - application-network

  maintenance-page:
    image: nginx:stable
    restart: always
    volumes:
      - ./config/maintenance-page/default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./config/maintenance-page/maintenance.html:/usr/share/nginx/html/maintenance.html:ro
    networks:
      - application-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    restart: always
    privileged: true
    command:
      - "--enable_metrics=cpu,memory,network"
      - "--store_container_labels=false"
      - "--docker_only=true"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    networks:
      - application-network
    logging:
      <<: *env-logging
    deploy:
      mode: global
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"

  prometheus:
    image: prom/prometheus:v2.43.0
    restart: always
    depends_on:
      - cadvisor
    volumes:
      - ./config/prometheus/:/etc/prometheus:ro
      - prometheus_vol:/prometheus
    networks:
      - application-network
    logging:
      <<: *env-logging

  grafana:
    image: grafana/grafana:9.5.1
    restart: always
    depends_on:
      - prometheus
    env_file:
      - ./config/grafana/config.monitoring
    volumes:
      - grafana_vol:/var/lib/grafana
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - application-network
    logging:
      <<: *env-logging

  dozzle:
    image: amir20/dozzle:v4.11.2
    restart: always
    environment:
      DOZZLE_LEVEL: info
      DOZZLE_NO_ANALYTICS: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - application-network
    logging:
      <<: *env-logging
    deploy:
      mode: global


volumes:
  prometheus_vol:
  grafana_vol:

networks:
  application-network:
    name: app-net
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: $DOCKER_DAEMON_MTU
  traefik-network:
    name: traefik-net
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: $DOCKER_DAEMON_MTU
